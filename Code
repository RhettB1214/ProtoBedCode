/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       C:\Users\blarhe8849                                       */
/*    Created:      Mon May 23 2022                                           */
/*    Description:  V5 project                                                */
/*                                                                            */
/*----------------------------------------------------------------------------*/

// ---- START VEXCODE CONFIGURED DEVICES ----
// Robot Configuration:
// [Name]               [Type]        [Port(s)]
// leftFlywheelMotor    motor         5               
// rightFlywheelMotor   motor         2               
// leftFlywheelEncoder  rotation      11              
// rightFlywheelEncoder rotation      12              
// pPusher              digital_out   A               
// Controller1          controller                    
// ---- END VEXCODE CONFIGURED DEVICES ----

#include "vex.h"
#include <iostream>
#include <fstream>
std::ofstream test ("test.h");


int leftFlywheelRPM = 200; //Defines the Inital and Fastest Speed of the Left Flywheel Motor
int rightFlywheelRPM = 200; //Defines the Inital and Fastest Speed of the Left Flywheel Motor
int x = 0; // Defines the Row of the Array that will be Printed to
int timePassed = 0;//Defines the time passed in milliseconds, Counts up by ten each time RPMValue Runs
uint32_t RPMValues[1000000][3]; //Defines the RPMValues array at a larger than neccesary size

using namespace vex;

void RPMValue(){
  int trueLeftFlywheelRPM = leftFlywheelEncoder.velocity(rpm); //Reads the speed of the left flywheel at the axle of the Flywheel
  int trueRightFlywheelSpeed = rightFlywheelEncoder.velocity(rpm); //Reads the speed of the right flywheel at the axle of the Flywheel
  RPMValues [x][0]= timePassed; //Writes the time passed to the first column of the array
  RPMValues [x][1] = trueLeftFlywheelRPM; //Writes the left flywheel speed to the second column of the array
  RPMValues [x][2] = trueRightFlywheelSpeed; // Writes the right flywheel speed to the third column of the array
  x++; //moves to the next row of the array
  timePassed += 10; //adds ten to the time passed variable
  wait(10,msec); // waits ten milliseconds before running the function again
}

int main() {
while (true){
  if(Controller1.ButtonY.pressing()){ //Fires the pnuematic Pusher when Y is pressed on the Controller
    pPusher.set(true);
    wait(25,msec);
    pPusher.set(false);
  }
  if(Controller1.ButtonA.pressing()){ //Turns on the flywheels when A is pressed on the Controller
    leftFlywheelMotor.setVelocity(leftFlywheelRPM, rpm);
    rightFlywheelMotor.setVelocity(rightFlywheelRPM, rpm);
    leftFlywheelMotor.spin(forward);
    rightFlywheelMotor.spin(forward);
  }
  if(Controller1.ButtonB.pressing()){ //Turns off the flywheels when B is pressed on the Controller
    leftFlywheelMotor.stop();
    rightFlywheelMotor.stop();
  }
  if(Controller1.ButtonL1.pressing()){ //Increases the left Flywheel by 50 RPM when L1 is pressed on the controller
    if(leftFlywheelRPM < 200){
      leftFlywheelRPM += 50;
    }
    leftFlywheelMotor.setVelocity(leftFlywheelRPM, rpm);
  }
  if(Controller1.ButtonL2.pressing()){ //Decreases the left Flywheel by 50 when L2 is pressed on the Controller
  if(leftFlywheelRPM >= 0){
      leftFlywheelRPM -= 50;
    }
    leftFlywheelMotor.setVelocity(leftFlywheelRPM,rpm);
}
if(Controller1.ButtonR1.pressing()){ //Increases the Right Flywheel speed by 50 RPM when R1 is pressed on the controller
    if(rightFlywheelRPM < 200){
      rightFlywheelRPM += 50;
    }
    rightFlywheelMotor.setVelocity(rightFlywheelRPM, rpm);
  }
  if(Controller1.ButtonR2.pressing()){ //Decreases the Right Flywheel speed by 50 RPMs when R2 is pressed
  if(rightFlywheelRPM >= 0){
      rightFlywheelRPM -= 50;
    }
    rightFlywheelMotor.setVelocity(rightFlywheelRPM,rpm);
}
Brain.Screen.print("Left Flywheel Speed: "); //Defines what value is shown
Brain.Screen.print(leftFlywheelEncoder.velocity(rpm)); //Prints the Speed of the Left Flywheel on the controller Screen
Brain.Screen.newLine(); // Adds a new line on the controller screen
Brain.Screen.print("Rights Flywheel Speed: "); //Defines what value is shown
Brain.Screen.print(rightFlywheelEncoder.velocity(rpm)); //Prints the Speed of the Right Flywheel on the controller Screen
Brain.Screen.newLine();
RPMValue(); //Runs the RPMValue function
if(Controller1.ButtonX.pressing()){
  break;
}
}
for (int i=0; i <= x; ++i){ //prints the RPMValues array
  test<< RPMValues[i][0]; // Writes out Time Passed Values
  test<< RPMValues[i][1]; // Writes out Left Flywheel Speed Values
  test<< RPMValues[i][2]; // Writes out Right Flywheel Speed Values
}
Brain.SDcard.savefile("test.h", );
}
